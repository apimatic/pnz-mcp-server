/**
 * Account and Transaction API SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { allTools } from "./tools/index.js";
import { type Server } from "@modelcontextprotocol/sdk/server/index.js";
import {
  CallToolRequestSchema,
  ErrorCode,
  ListToolsRequestSchema,
  McpError,
  type CallToolRequest,
  type CallToolResult,
  type ListToolsResult,
} from "@modelcontextprotocol/sdk/types.js";


/**
 * Handles the 'tools/list' MCP request.
 */
export async function handleListTools(): Promise<ListToolsResult> {
  return {
    tools: Object.values(allTools).map((toolDefinition) => toolDefinition.tool),
  };
}

/**
 * Handles the 'tools/call' MCP request.
 */
export async function handleCallTool(
  request: CallToolRequest
): Promise<CallToolResult> {
  const { name, arguments: args } = request.params;

  const toolDefinition = allTools[name];
  if (toolDefinition) {
    return await toolDefinition.handler(args);
  }

  throw new McpError(ErrorCode.MethodNotFound, `Tool '${name}' not found`);
}

/**
 * Registers the MCP request handlers with the server instance.
 */
export function registerHandlers(server: Server): void {
  server.setRequestHandler(ListToolsRequestSchema, handleListTools);
  server.setRequestHandler(CallToolRequestSchema, handleCallTool);
}

